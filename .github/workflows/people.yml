name: People

on:
  push:
    branches: [ master ]

env:
  WORKING_DIRECTORY: ./src

jobs:
  build:
    name: Build and test solution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github Action
        uses: actions/checkout@master

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Build
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test --no-restore --verbosity normal

  people_api:
    name: Docker build API
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Github Action
        uses: actions/checkout@master

      - name: Compose build people.api
        run: sudo -E docker-compose build people.api
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: bash
        env:
          TAG: ${{ env.BRANCH }}

  people_gateway:
    name: Docker build Gateway
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Github Action
        uses: actions/checkout@master

      - name: Compose build people.gateway
        run: sudo -E docker-compose build people.gateway
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: bash
        env:
          TAG: ${{ env.BRANCH }}

  people_notification:
    name: Docker build Notifications
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Github Action
        uses: actions/checkout@master

      - name: Compose build people.notification
        run: sudo -E docker-compose build people.notification
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: bash
        env:
          TAG: ${{ env.BRANCH }}

  people_worker:
    name: Docker build Worker
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Github Action
        uses: actions/checkout@master

      - name: Compose build people.worker
        run: sudo -E docker-compose build people.worker
        working-directory: ${{ env.WORKING_DIRECTORY }}
        shell: bash
        env:
          TAG: ${{ env.BRANCH }}