syntax = "proto3";
import "common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "People.Grpc.Gateway";

service PeopleService {
  rpc GetAccounts (AccountsRequest) returns (AccountsReply);
  rpc GetAccount (people.AccountIdValue) returns (AccountReply);

  rpc UpdateAccount (UpdateAccountRequest) returns (AccountReply);
  rpc ConfirmConnection (ConfirmRequest) returns (AccountReply);
  rpc ConfuteConnection (ConfuteRequest) returns (AccountReply);
  rpc DeleteConnection (DeleteConnectionRequest) returns (AccountReply);
  rpc ChangePrimaryEmail (ChangePrimaryEmailRequest) returns (AccountReply);

  rpc CreatePassword (CreatePasswordRequest) returns (AccountReply);
  rpc UpdatePassword (UpdatePasswordRequest) returns (google.protobuf.Empty);

  rpc CreateRole (RoleRequest) returns (AccountReply);
  rpc DeleteRole (RoleRequest) returns (AccountReply);

  rpc Ban (BanRequest) returns (AccountReply);
  rpc Unban (people.AccountIdValue) returns (AccountReply);

  rpc Delete (people.AccountIdValue) returns (google.protobuf.Empty);
  rpc SendConfirmationCode (ConfirmationCodeRequest) returns (ConfirmationCodeReply);

  rpc GetCountries (CountriesRequest) returns(CountriesReply);
}

message AccountsRequest {
  int32 page = 1;
  int32 limit = 2;
}

message AccountsReply {
  message Account {
    people.AccountIdValue id = 1;
    people.Name name = 2;
    google.protobuf.StringValue country_code = 3;
    string time_zone = 4;
    string language = 5;
    string picture = 6;
    google.protobuf.Timestamp created_at = 7;
  }

  uint32 pages = 1;
  int64 count = 2;
  repeated Account topics = 3;
}

message AccountReply {
  message Connection {
    people.IdentityType type = 1;
    string value = 2;
    google.protobuf.Timestamp created_at = 3;
    google.protobuf.Timestamp confirmed_at = 4;

    oneof ConnectionType {
      EmailConnection email = 5;
      SocialConnection social = 6;
    }
  }

  people.AccountIdValue id = 1;
  people.Name name = 2;
  google.protobuf.StringValue country_code = 3;
  string time_zone = 4;
  string date_format = 5;
  string time_format = 6;
  people.DayOfWeek week_start = 7;
  string language = 8;
  string picture = 9;
  people.Ban ban = 10;
  bool is_password_available = 11;
  google.protobuf.Timestamp created_at = 12;
  google.protobuf.Timestamp last_sign_in = 13;
  repeated string roles = 14;
  repeated Connection connections = 15;
}

message RoleRequest {
  people.AccountIdValue id = 1;
  string role = 2;
}

message BanRequest {
  people.AccountIdValue id = 1;
  string reason = 2;
  google.protobuf.Timestamp expiredAt = 3;
}

message UpdateAccountRequest {
  people.AccountIdValue id = 1;
  google.protobuf.StringValue first_name = 2;
  google.protobuf.StringValue last_name = 3;
  string nickname = 4;
  bool prefer_nickname = 5;
  google.protobuf.StringValue country_code = 6;
  string time_zone = 7;
  string date_format = 8;
  string time_format = 9;
  people.DayOfWeek week_start = 10;
  string language = 11;
}

message EmailConnection {
  bool is_primary = 1;
}

message SocialConnection {
  google.protobuf.StringValue first_name = 1;
  google.protobuf.StringValue last_name = 2;
}

message ConfirmRequest {
  people.AccountIdValue id = 1;
  people.Identity identity = 2;
  optional people.Confirm confirm = 3;
}

message ConfuteRequest {
  people.AccountIdValue id = 1;
  people.Identity identity = 2;
}

message ChangePrimaryEmailRequest {
  people.AccountIdValue id = 1;
  string email = 2;
}

message DeleteConnectionRequest {
  people.AccountIdValue id = 1;
  people.Identity identity = 2;
}

message CreatePasswordRequest {
  people.AccountIdValue id = 1;
  string password = 2;
  people.Confirm confirm = 3;
}

message UpdatePasswordRequest {
  people.AccountIdValue id = 1;
  string old_password = 2;
  string new_password = 3;
}

message ConfirmationCodeRequest {
  people.AccountIdValue id = 1;
  optional people.Identity identity = 2;
  string language = 3;
}

message ConfirmationCodeReply {
  string token = 1;
}

message CountriesRequest {
  string language = 1;
}

message CountriesReply {
  message Country {
    string code = 1;
    string name = 2;
  }

  repeated Country countries = 1;
}
