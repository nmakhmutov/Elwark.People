version: '3.7'

networks:
  elwarknetwork:
    external:
      name: elwark_network
      
services:

  people.gateway:
    container_name: "people_gateway"
    image: "elwark/people-gateway:${TAG:-latest}"
    build:
      context: .
      dockerfile: People.Gateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Urls__Identity=http://identity
      - Urls__People.Api=http://people_api
      - Urls__People.Notification=http://people_notification
    ports:
      - "5001:80"
    networks:
      - elwarknetwork

  people.api:
    container_name: "people_api"
    image: "elwark/people-api:${TAG:-latest}"
    build:
      context: .
      dockerfile: People.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - Grpc__Port=80
      - Mongodb__ConnectionString=mongodb://master_account:master_password@mongo
      - Kafka__Servers=broker:29092
    ports:
      - "5002:80"
    networks:
      - elwarknetwork
        
  people.worker:
    container_name: "people_worker"
    image: "elwark/people-worker:${TAG:-latest}"
    build:
      context: .
      dockerfile: People.Worker/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - Mongodb__ConnectionString=mongodb://master_account:master_password@mongo
      - Kafka__Servers=broker:29092
    ports:
      - "5003:80"
    networks:
      - elwarknetwork
  
  people.notification:
    container_name: "people_notification"
    image: "elwark/people-notification:${TAG:-latest}"
    build:
      context: .
      dockerfile: People.Notification/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Grpc__Port=80
      - Mongodb__ConnectionString=mongodb://master_account:master_password@mongo
      - Kafka__Servers=broker:29092
    ports:
      - "5004:80"
    networks:
      - elwarknetwork